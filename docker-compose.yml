version: '3.1'

services:
  # db:
  #   env_file: 
  #     - prod.env
  #   image: postgres
  #   container_name: manushaidb
  #   ports:
  #     - 5432:5432
  #   restart: always
  #   environment:
  #     POSTGRES_DB: $${PG_DATABASE}
  #     POSTGRES_PASSWORD: $${PG_PASSWORD}
  #     POSTGRES_USER: $${PG_USER}
  #   volumes:
  #     - "pgvol:/var/lib/postgresql/data"
  #   networks:
  #     - app-network
  adminer:
    image: adminer
    container_name: adminerpg
    restart: always
    ports:
      - 8081:8080
    networks:
      - app-network
  redis:
    image: redis
    container_name: manushai-redis
    volumes:
      - redis_data:/data
    command: redis-server --requirepass password
    ports:
      - '6379:6379'
    networks:
      - app-network
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: manushai-rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - app-network
  web:
    image: caffeines/foodyo:0.1
    container_name: manush-ai-task
    restart: always
    env_file: prod.env
    ports:
        - 4123:4123
    volumes:
        - .:/home/manush-ai-task/app
        - /home/manush-ai-task/app/node_modules
    networks:
        - app-network
    command: node server.js
    depends_on:
        - worker
    links:
        - rabbitmq
        - redis
  worker: 
    image: caffeines/foodyo:0.1
    container_name: manush-ai-task-worker
    restart: always
    env_file: prod.env
    volumes:
      - .:/home/manush-ai-task/app
      - /home/manush-ai-task/app/node_modules
    networks:
        - app-network
    command: node queue/worker.js
    depends_on:
        - rabbitmq
        - redis
    links:
        - rabbitmq
        - redis
volumes:
  pgvol:
  redis_data:
networks:
  app-network:
    driver: bridge